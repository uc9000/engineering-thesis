\begin{Verbatim}[commandchars=\\\{\}]
\PYG{n+nd}{@Override}
\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{onIfStatementEnter}\PYG{p}{(}\PYG{n}{String} \PYG{n}{condition}\PYG{p}{,} \PYG{n}{String} \PYG{n}{expressions}\PYG{p}{)\PYGZob{}}
    \PYG{n}{condition} \PYG{o}{=} \PYG{n}{replaceChars}\PYG{p}{(}\PYG{n}{condition}\PYG{p}{);}
    \PYG{n}{condition} \PYG{o}{=} \PYG{n}{wordWrap}\PYG{p}{(}\PYG{n}{condition}\PYG{p}{,} \PYG{l+m+mi}{12}\PYG{p}{);}
    \PYG{n}{log}\PYG{p}{.}\PYG{n+na}{info}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}IF entered : \PYGZdq{}} \PYG{o}{+} \PYG{n}{condition} \PYG{o}{+} \PYG{l+s}{\PYGZdq{} than : \PYGZdq{}} \PYG{o}{+} \PYG{n}{expressions}\PYG{p}{);}
    \PYG{n}{manager}\PYG{p}{.}\PYG{n+na}{setLastNode}\PYG{p}{(}\PYG{n}{fromNode}\PYG{p}{);}
    \PYG{n}{NodeItem} \PYG{n}{scopeNode} \PYG{o}{=} \PYG{n}{manager}
            \PYG{p}{.}\PYG{n+na}{createDecisionNodeLinkedToLast}\PYG{p}{(}\PYG{n}{condition}\PYG{p}{);}
    \PYG{n}{scopeNodes}\PYG{p}{.}\PYG{n+na}{push}\PYG{p}{(}\PYG{n}{scopeNode}\PYG{p}{);}
    \PYG{n}{fromNode} \PYG{o}{=} \PYG{n}{scopeNode}\PYG{p}{.}\PYG{n+na}{getOutputs}\PYG{p}{().}\PYG{n+na}{get}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{n+nd}{@Override}
\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{onIfStatementExit}\PYG{p}{()\PYGZob{}}
    \PYG{n}{log}\PYG{p}{.}\PYG{n+na}{info}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}IF exited\PYGZdq{}}\PYG{p}{);}
    \PYG{n}{manager}\PYG{p}{.}\PYG{n+na}{createSingleNode}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZsh{}if\PYGZus{}merge\PYGZdq{}}\PYG{p}{);}
    \PYG{n}{manager}\PYG{p}{.}\PYG{n+na}{linkNodes}\PYG{p}{(}\PYG{n}{scopeNodes}\PYG{p}{.}\PYG{n+na}{peek}\PYG{p}{().}\PYG{n+na}{findLastInTree}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{),}
            \PYG{n}{manager}\PYG{p}{.}\PYG{n+na}{getLastNode}\PYG{p}{());}
    \PYG{n}{manager}\PYG{p}{.}\PYG{n+na}{linkNodes}\PYG{p}{(}\PYG{n}{scopeNodes}\PYG{p}{.}\PYG{n+na}{peek}\PYG{p}{().}\PYG{n+na}{findLastInTree}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{),}
            \PYG{n}{manager}\PYG{p}{.}\PYG{n+na}{getLastNode}\PYG{p}{());}
    \PYG{n}{scopeNodes}\PYG{p}{.}\PYG{n+na}{pop}\PYG{p}{();}
    \PYG{n}{fromNode} \PYG{o}{=} \PYG{n}{manager}\PYG{p}{.}\PYG{n+na}{getLastNode}\PYG{p}{();}
\PYG{p}{\PYGZcb{}}

\PYG{n+nd}{@Override}
\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{onElseStatementEnter}\PYG{p}{(}\PYG{n}{String} \PYG{n}{expressions}\PYG{p}{)\PYGZob{}}
    \PYG{n}{log}\PYG{p}{.}\PYG{n+na}{info}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}ELSE entered : \PYGZdq{}} \PYG{o}{+} \PYG{n}{expressions}\PYG{p}{);}
    \PYG{n}{fromNode} \PYG{o}{=} \PYG{n}{scopeNodes}\PYG{p}{.}\PYG{n+na}{peek}\PYG{p}{().}\PYG{n+na}{getOutputs}\PYG{p}{().}\PYG{n+na}{get}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
